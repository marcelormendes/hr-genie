---
interface Props {
  currentPath: string;
}

const { currentPath } = Astro.props;

// Define navigation items to make them easier to maintain
const navItems = [
  { href: "/", label: "Home", isExternal: false },
  { href: "#features", label: "Features", isExternal: false },
  { href: "#pricing", label: "Pricing", isExternal: false },
  { href: "#about", label: "About", isExternal: false },
];
---

<header class="sticky top-0 z-50 bg-[#00154c] border-b border-[rgba(255,255,255,0.1)]">
  <div class="container mx-auto px-4">
    <div class="flex items-center justify-between h-20">
      <!-- Logo -->
      <a href="/" class="flex items-center">
        <img 
          src="/images/hrgenie_new_logo.jpeg" 
          alt="HR Genie Logo" 
          class="h-16 w-auto" 
        />
      </a>

      <!-- Desktop Navigation -->
      <nav class="hidden md:flex items-center space-x-1">
        {
          navItems.map((item) => (
            <a
              href={item.href}
              class={`text-white/80 hover:text-white hover:bg-white/10 px-3 py-2 rounded-md text-sm font-medium transition-colors ${
                currentPath === item.href ? "text-white bg-white/10" : ""
              }`}
              target={item.isExternal ? "_blank" : undefined}
              rel={item.isExternal ? "noopener noreferrer" : undefined}
            >
              {item.label}
            </a>
          ))
        }
        <div class="mx-2 h-5 w-px bg-[rgba(255,255,255,0.1)]"></div>
        <a
          href="#cta"
          class="text-white/80 hover:text-white hover:bg-white/10 px-3 py-2 rounded-md text-sm font-medium transition-colors"
        >
          Try Now
        </a>
        <a
          href="/signin"
          class="bg-[#00d4ff] hover:bg-[#00d4ff]/90 text-black px-4 py-2 rounded-md text-sm font-medium transition-colors"
        >
          Sign In
        </a>
      </nav>

      <!-- Mobile menu button -->
      <div class="md:hidden flex items-center gap-2">
        <button
          id="mobile-menu-button"
          class="p-2 rounded-md text-white/80 hover:text-white hover:bg-white/10 focus:outline-none transition-colors"
          aria-label="Toggle mobile menu"
        >
          <svg
            xmlns="http://www.w3.org/2000/svg"
            class="h-6 w-6"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M4 6h16M4 12h16M4 18h16"
            />
          </svg>
        </button>
      </div>
    </div>

    <!-- Mobile Navigation -->
    <div id="mobile-menu" class="hidden md:hidden py-4 border-t border-[rgba(255,255,255,0.1)] bg-[#00154c]">
      <div class="flex flex-col space-y-2">
        {
          navItems.map((item) => (
            <a
              href={item.href}
              class={`text-white/80 hover:text-white hover:bg-white/10 px-4 py-2 rounded-md font-medium transition-colors ${
                currentPath === item.href ? "text-white bg-white/10" : ""
              }`}
              target={item.isExternal ? "_blank" : undefined}
              rel={item.isExternal ? "noopener noreferrer" : undefined}
            >
              {item.label}
            </a>
          ))
        }
        <div class="border-t border-[rgba(255,255,255,0.1)] my-2"></div>
        <a
          href="#cta"
          class="text-white/80 hover:text-white hover:bg-white/10 px-4 py-2 rounded-md font-medium transition-colors"
        >
          Try Now
        </a>
        <a
          href="/signin"
          class="bg-[#00d4ff] hover:bg-[#00d4ff]/90 text-black font-medium px-4 py-2 rounded-md transition-colors mx-4"
        >
          Sign In
        </a>
      </div>
    </div>
  </div>
</header>

<script>
  // Mobile menu toggle
  document.getElementById("mobile-menu-button")?.addEventListener("click", () => {
    document.getElementById("mobile-menu")?.classList.toggle("hidden");
  });

  // Close mobile menu when clicking outside
  document.addEventListener("click", (event) => {
    const mobileMenu = document.getElementById("mobile-menu");
    const mobileMenuButton = document.getElementById("mobile-menu-button");

    if (mobileMenu && !mobileMenu.classList.contains("hidden")) {
      if (
        event.target !== mobileMenuButton &&
        !mobileMenuButton?.contains(event.target as Node) &&
        !mobileMenu.contains(event.target as Node)
      ) {
        mobileMenu.classList.add("hidden");
      }
    }
  });

  // Smooth scroll for Try Now button
  document.querySelectorAll('a[href="#cta"]').forEach(anchor => {
    anchor.addEventListener('click', function (e) {
      e.preventDefault();
      document.querySelector('#cta')?.scrollIntoView({
        behavior: 'smooth'
      });
    });
  });
</script> 