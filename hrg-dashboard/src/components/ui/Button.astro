---
interface Props {
  href?: string;
  variant?: 'primary' | 'secondary' | 'outline' | 'text';
  size?: 'sm' | 'md' | 'lg';
  class?: string;
  type?: 'button' | 'submit' | 'reset';
  [x: string]: any;
}

const {
  href,
  variant = 'primary',
  size = 'md',
  class: className = '',
  type = 'button',
  ...rest
} = Astro.props;

const variantClasses = {
  primary: 'bg-primary-600 hover:bg-primary-700 text-white',
  secondary: 'bg-gray-200 hover:bg-gray-300 text-gray-800',
  outline: 'border border-primary-600 bg-white hover:bg-gray-50 text-primary-600',
  text: 'bg-transparent hover:bg-gray-50 text-primary-600'
};

const sizeClasses = {
  sm: 'py-1.5 px-3 text-sm',
  md: 'py-2 px-4',
  lg: 'py-3 px-6 text-lg'
};

const baseClasses = 'inline-flex items-center justify-center rounded-md font-medium transition-colors focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2';
const classes = `${baseClasses} ${variantClasses[variant]} ${sizeClasses[size]} ${className}`;
---

{
  href ? (
    <a href={href} class={classes} {...rest}>
      <slot />
    </a>
  ) : (
    <button type={type} class={classes} {...rest}>
      <slot />
    </button>
  )
} 