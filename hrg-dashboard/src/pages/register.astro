---
import MainLayout from "../layouts/MainLayout.astro";

// Get query parameters
const error = Astro.url.searchParams.get("error");

// Define error messages
const errorMessages: { [key: string]: string } = {
  missing_fields: "Please fill in all required fields.",
  email_exists: "An account with this email already exists.",
  password_mismatch: "Passwords do not match.",
  registration_failed: "Registration failed. Please try again.",
};
---

<MainLayout title="Register - HR Genie" showNavigation={false}>
  <div class="container mx-auto px-4 py-12">
    <div
      class="max-w-md mx-auto bg-card dark:bg-[#121212] border border-transparent dark:border-[#333] rounded-lg shadow-lg p-8"
    >
      <h1
        class="text-2xl font-bold text-center mb-6 text-foreground dark:text-white"
      >
        Create an Account
      </h1>

      {
        error && (
          <div
            class="mb-6 bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded"
            role="alert"
          >
            <p>
              {errorMessages[error] || "An error occurred. Please try again."}
            </p>
          </div>
        )
      }

      <!-- Google Sign-Up Button -->
      <div class="mb-6">
        <a
          href="javascript:void(0);"
          id="googleSignUpButton"
          class="w-full flex justify-center items-center gap-3 bg-transparent dark:bg-transparent py-2 px-4 border border-[#333] dark:border-[#333] rounded-md shadow-sm text-sm font-medium text-foreground dark:text-white hover:bg-muted dark:hover:bg-[#222] focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-ring dark:focus:ring-offset-background"
        >
          <svg
            class="h-5 w-5"
            viewBox="0 0 24 24"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z"
              fill="#4285F4"></path>
            <path
              d="M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z"
              fill="#34A853"></path>
            <path
              d="M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z"
              fill="#FBBC05"></path>
            <path
              d="M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z"
              fill="#EA4335"></path>
          </svg>
          Sign up with Google
        </a>
      </div>

      <script>
        // Google Sign-Up
        document
          .getElementById("googleSignUpButton")
          ?.addEventListener("click", () => {
            const backendUrl =
              import.meta.env.BACKEND_URL || "http://localhost:3000";
            window.location.href = `${backendUrl}/api/v1/auth/google`;
          });
      </script>

      <div class="relative mb-6">
        <div class="absolute inset-0 flex items-center">
          <div class="w-full border-t border-border dark:border-[#333]"></div>
        </div>
        <div class="relative flex justify-center text-sm">
          <span
            class="px-2 bg-card dark:bg-[#121212] text-muted-foreground dark:text-gray-400"
            >Or sign up with email</span
          >
        </div>
      </div>

      <form class="space-y-4" id="registerForm">
        <div>
          <label
            for="name"
            class="block text-sm font-medium text-muted-foreground dark:text-gray-300 mb-1"
            >Full Name</label
          >
          <input
            type="text"
            id="name"
            name="name"
            required
            class="w-full px-3 py-2 border border-border dark:border-[#333] rounded-md focus:outline-none focus:ring-2 focus:ring-ring dark:focus:ring-[#00d4ff]/50 dark:focus:border-[#00d4ff] bg-background dark:bg-[#181818] text-foreground dark:text-white placeholder-muted-foreground dark:placeholder-gray-500"
          />
        </div>

        <div>
          <label
            for="email"
            class="block text-sm font-medium text-muted-foreground dark:text-gray-300 mb-1"
            >Email Address</label
          >
          <input
            type="email"
            id="email"
            name="email"
            required
            class="w-full px-3 py-2 border border-border dark:border-[#333] rounded-md focus:outline-none focus:ring-2 focus:ring-ring dark:focus:ring-[#00d4ff]/50 dark:focus:border-[#00d4ff] bg-background dark:bg-[#181818] text-foreground dark:text-white placeholder-muted-foreground dark:placeholder-gray-500"
          />
        </div>

        <div>
          <label
            for="companyName"
            class="block text-sm font-medium text-muted-foreground dark:text-gray-300 mb-1"
            >Company Name</label
          >
          <input
            type="text"
            id="companyName"
            name="companyName"
            required
            class="w-full px-3 py-2 border border-border dark:border-[#333] rounded-md focus:outline-none focus:ring-2 focus:ring-ring dark:focus:ring-[#00d4ff]/50 dark:focus:border-[#00d4ff] bg-background dark:bg-[#181818] text-foreground dark:text-white placeholder-muted-foreground dark:placeholder-gray-500"
          />
        </div>

        <div>
          <label
            for="password"
            class="block text-sm font-medium text-muted-foreground dark:text-gray-300 mb-1"
            >Password</label
          >
          <input
            type="password"
            id="password"
            name="password"
            required
            minlength="6"
            class="w-full px-3 py-2 border border-border dark:border-[#333] rounded-md focus:outline-none focus:ring-2 focus:ring-ring dark:focus:ring-[#00d4ff]/50 dark:focus:border-[#00d4ff] bg-background dark:bg-[#181818] text-foreground dark:text-white placeholder-muted-foreground dark:placeholder-gray-500"
          />
        </div>

        <div>
          <label
            for="confirmPassword"
            class="block text-sm font-medium text-muted-foreground dark:text-gray-300 mb-1"
            >Confirm Password</label
          >
          <input
            type="password"
            id="confirmPassword"
            name="confirmPassword"
            required
            minlength="6"
            class="w-full px-3 py-2 border border-border dark:border-[#333] rounded-md focus:outline-none focus:ring-2 focus:ring-ring dark:focus:ring-[#00d4ff]/50 dark:focus:border-[#00d4ff] bg-background dark:bg-[#181818] text-foreground dark:text-white placeholder-muted-foreground dark:placeholder-gray-500"
          />
        </div>

        <div class="flex items-center">
          <input
            type="checkbox"
            id="terms"
            name="terms"
            required
            class="h-4 w-4 text-[#00d4ff] border-border dark:border-[#333] rounded focus:ring-[#00d4ff] bg-background dark:bg-[#181818]"
          />
          <label
            for="terms"
            class="ml-2 block text-sm text-muted-foreground dark:text-gray-300"
          >
            I agree to the <a
              href="/terms"
              class="text-[#00d4ff] hover:text-[#00d4ff]/90">Terms of Service</a
            > and <a
              href="/privacy"
              class="text-[#00d4ff] hover:text-[#00d4ff]/90">Privacy Policy</a
            >
          </label>
        </div>

        <button
          type="submit"
          id="registerButton"
          class="w-full bg-[#00d4ff] hover:bg-[#00d4ff]/90 text-black font-medium py-2 px-4 rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[#00d4ff] dark:focus:ring-offset-background"
        >
          Create Account
        </button>

        <div
          id="registerError"
          class="hidden mt-3 bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded"
          role="alert"
        >
          <p id="registerErrorText"></p>
        </div>
      </form>

      <script>
        // Registration form validation and submission
        document
          .getElementById("registerForm")
          ?.addEventListener("submit", async (e) => {
            e.preventDefault();

            const name = (document.getElementById("name") as HTMLInputElement)
              .value;
            const email = (document.getElementById("email") as HTMLInputElement)
              .value;
            const companyName = (
              document.getElementById("companyName") as HTMLInputElement
            ).value;
            const password = (
              document.getElementById("password") as HTMLInputElement
            ).value;
            const confirmPassword = (
              document.getElementById("confirmPassword") as HTMLInputElement
            ).value;
            const termsAccepted = (
              document.getElementById("terms") as HTMLInputElement
            ).checked;

            const registerButton = document.getElementById(
              "registerButton"
            ) as HTMLButtonElement | null;
            const registerError = document.getElementById("registerError");
            const registerErrorText =
              document.getElementById("registerErrorText");

            if (!registerButton || !registerError || !registerErrorText) return; // Exit if elements not found

            // Clear previous error
            registerError.classList.add("hidden");

            // Validate form
            if (
              !name ||
              !email ||
              !companyName ||
              !password ||
              !confirmPassword
            ) {
              registerErrorText.textContent =
                "Please fill in all required fields.";
              registerError.classList.remove("hidden");
              return;
            }
            if (password !== confirmPassword) {
              registerErrorText.textContent = "Passwords do not match.";
              registerError.classList.remove("hidden");
              return;
            }
            if (!termsAccepted) {
              registerErrorText.textContent =
                "You must accept the Terms of Service and Privacy Policy.";
              registerError.classList.remove("hidden");
              return;
            }

            // Show loading state
            registerButton.disabled = true;
            registerButton.textContent = "Creating Account...";

            try {
              const backendUrl =
                import.meta.env.BACKEND_URL || "http://localhost:3000";
              const response = await fetch(
                `${backendUrl}/api/v1/auth/register`,
                {
                  method: "POST",
                  headers: { "Content-Type": "application/json" },
                  body: JSON.stringify({ name, email, companyName, password }),
                  credentials: "include",
                }
              );

              if (!response.ok) {
                const errorData = await response
                  .json()
                  .catch(() => ({ message: "Registration failed" }));
                throw new Error(errorData.message || "Registration failed");
              }

              // TODO: Handle successful registration (e.g., store token, redirect)
              window.location.href = "/dashboard";
            } catch (error) {
              registerErrorText.textContent =
                error instanceof Error
                  ? error.message
                  : "Registration failed. Please try again.";
              registerError.classList.remove("hidden");
              registerButton.disabled = false;
              registerButton.textContent = "Create Account";
            }
          });
      </script>

      <p
        class="mt-8 text-center text-sm text-muted-foreground dark:text-gray-400"
      >
        Already have an account?
        <a
          href="/login"
          class="font-medium text-[#00d4ff] hover:text-[#00d4ff]/90">Sign in</a
        >
      </p>
    </div>
  </div>
</MainLayout>
