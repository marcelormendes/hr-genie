---
import DashboardLayout from "../../layouts/DashboardLayout.astro";

/* SSR auth check removed */

// Get status parameter
const status = Astro.url.searchParams.get("status");
const error = Astro.url.searchParams.get("error");

// Initial empty state - data will be loaded client-side
const backendUrl = import.meta.env.BACKEND_URL || "http://localhost:3000";
---

<DashboardLayout title="Profile - HR Genie" activePage="profile">
  <h1 class="text-xl font-semibold mb-6">Profile Information</h1>

  <div id="loading-indicator" class="mb-6 text-center py-4">
    <div
      class="inline-block animate-spin rounded-full h-8 w-8 border-b-2 border-indigo-600"
    >
    </div>
    <p class="mt-2 text-gray-600">Loading profile...</p>
  </div>

  <div id="responseMessageContainer" class="mb-4">
    <div
      id="errorMessage"
      class="hidden bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded"
      role="alert"
    >
      <p id="errorText"></p>
    </div>
    <div
      id="successMessage"
      class="hidden bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded"
      role="alert"
    >
      <p id="successText"></p>
    </div>
  </div>

  <form id="profileForm" class="space-y-4 hidden">
    <div>
      <label for="name" class="block text-sm font-medium text-gray-700 mb-1">
        Name
      </label>
      <input
        type="text"
        id="name"
        name="name"
        class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500"
      />
    </div>

    <div>
      <label for="email" class="block text-sm font-medium text-gray-700 mb-1">
        Email Address
      </label>
      <input
        type="email"
        id="email"
        name="email"
        class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500"
      />
    </div>

    <div>
      <button
        type="submit"
        id="updateProfileButton"
        class="px-4 py-2 bg-indigo-600 text-white text-sm font-medium rounded-md hover:bg-indigo-700"
      >
        Update Profile
      </button>
    </div>
  </form>
</DashboardLayout>

<script>
  interface UserProfile {
    name: string | null;
    email: string;
  }

  // Backend URL
  const backendUrl = import.meta.env.BACKEND_URL || "http://localhost:3000";

  // Elements
  const loadingIndicator = document.getElementById("loading-indicator");
  const profileForm = document.getElementById("profileForm");
  const nameInput = document.getElementById("name") as HTMLInputElement;
  const emailInput = document.getElementById("email") as HTMLInputElement;
  const updateProfileButton = document.getElementById(
    "updateProfileButton"
  ) as HTMLButtonElement;
  const errorMessageDiv = document.getElementById("errorMessage")!;
  const errorTextP = document.getElementById("errorText")!;
  const successMessageDiv = document.getElementById("successMessage")!;
  const successTextP = document.getElementById("successText")!;

  // Message display helpers
  function showMessage(type: "success" | "error", text: string) {
    clearMessages();
    if (type === "success") {
      successTextP.textContent = text;
      successMessageDiv.classList.remove("hidden");
    } else {
      errorTextP.textContent = text;
      errorMessageDiv.classList.remove("hidden");
    }
  }

  function clearMessages() {
    errorMessageDiv.classList.add("hidden");
    successMessageDiv.classList.add("hidden");
  }

  // Initialize page
  document.addEventListener("DOMContentLoaded", () => {
    loadUserProfile();
    setupFormListener();

    // Check for status messages from redirects (e.g., password change)
    const urlParams = new URLSearchParams(window.location.search);
    const status = urlParams.get("status");
    const error = urlParams.get("error");

    if (status === "password_changed") {
      showMessage("success", "Password changed successfully.");
      // Clean the URL
      window.history.replaceState({}, document.title, window.location.pathname);
    }
  });

  async function loadUserProfile() {
    if (loadingIndicator) loadingIndicator.style.display = "block";
    if (profileForm) profileForm.classList.add("hidden");
    clearMessages();

    try {
      const response = await fetch(`${backendUrl}/api/v1/auth/me`, {
        credentials: "include",
      });

      if (!response.ok) {
        // Redirect to login if not authenticated
        if (response.status === 401) {
          window.location.href = "/login?error=unauthorized";
          return;
        }
        throw new Error("Failed to load profile");
      }

      const user: UserProfile = await response.json();

      // Populate form
      nameInput.value = user.name || "";
      emailInput.value = user.email;

      if (profileForm) profileForm.classList.remove("hidden");
    } catch (error) {
      console.error("Error loading profile:", error);
      showMessage("error", "Failed to load profile. Please refresh the page.");
    } finally {
      if (loadingIndicator) loadingIndicator.style.display = "none";
    }
  }

  function setupFormListener() {
    profileForm?.addEventListener("submit", async (e) => {
      e.preventDefault();
      clearMessages();
      updateProfileButton.disabled = true;
      updateProfileButton.textContent = "Updating...";

      const name = nameInput.value;
      const email = emailInput.value;

      try {
        const response = await fetch(`${backendUrl}/api/v1/account/profile`, {
          method: "PATCH",
          headers: { "Content-Type": "application/json" },
          credentials: "include",
          body: JSON.stringify({ name, email }),
        });

        if (!response.ok) {
          const err = await response.json().catch(() => ({}));
          throw new Error(err.message || "Failed to update profile");
        }

        showMessage("success", "Profile updated successfully.");
      } catch (error) {
        showMessage(
          "error",
          error instanceof Error ? error.message : "Update failed"
        );
      } finally {
        updateProfileButton.disabled = false;
        updateProfileButton.textContent = "Update Profile";
      }
    });
  }
</script>
