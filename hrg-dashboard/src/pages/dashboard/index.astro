---
import DashboardLayout from "../../layouts/DashboardLayout.astro";

/* Removed Astro SSR auth check - will be handled elsewhere
// Check if user is authenticated by checking cookie
const userCookie = Astro.cookies.get('access_token')?.value;
if (!userCookie) {
  return Astro.redirect('/login?error=unauthorized');
}
*/

// OAuth connections will be fetched client-side
---

<DashboardLayout title="OAuth Integrations - HR Genie" activePage="oauth">
  <h1 class="text-2xl font-bold mb-6">OAuth Integrations</h1>

  <p class="text-gray-600 mb-8">
    Connect HR Genie to your services to unlock full functionality. These
    connections allow HR Genie to access your data and provide seamless
    integration between different platforms.
  </p>

  <div class="grid grid-cols-1 md:grid-cols-3 gap-6" id="oauthIntegrations">
    <div class="col-span-3 text-center py-8">
      <div
        class="inline-block animate-spin rounded-full h-8 w-8 border-t-2 border-b-2 border-indigo-600"
      >
      </div>
      <p class="mt-2 text-gray-600">Loading OAuth integrations...</p>
    </div>
  </div>

  <script>
    // Helper function to format date
    function formatDate(dateString: string | number | Date): string {
      const date = new Date(dateString);
      return date.toLocaleString();
    }

    // Template for Google Drive integration
    function getGoogleDriveTemplate(
      isConnected: boolean,
      expiresAt: string | null = null
    ): string {
      return `
        <div class="border border-gray-200 rounded-lg p-6 hover:shadow-md transition-shadow">
          <div class="flex items-center justify-between mb-4">
            <div class="flex items-center">
              <svg class="h-8 w-8 text-blue-500" viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                <path d="M4.858 4.88c-.63-.8-1.127-1.28-1.127-1.28l.337 2.08H9.929c2.29 0 4.286 1.28 5.413 3.28l-2.313 4c-.679-1.76-2.536-3.04-4.592-3.04H5.146l-.288-5.04z" fill="#4285F4" />
                <path d="M15.342 8.88l-5.413 9.36h5.729c2.29 0 4.286-1.28 5.413-3.28l2.313-4-2.313-4c-1.127-2-3.123-3.28-5.413-3.28h-5.729l5.413 5.2z" fill="#34A853" />
                <path d="M4.069 5.68l-.337-2.08S5.45 4.48 6.079 5.28l5.413 9.36-5.413 9.36c-.63.8-2.337 2.64-2.337 2.64l.337-2.08.288-5.04 2.001-3.28-2.001-3.28-.288-5.04v-2.24z" fill="#FBBC05" />
                <path d="M9.929 22.4h5.729l-5.413-9.36-5.413-9.36H4.069s1.707 1.84 2.337 2.64l5.413 9.36-5.413 9.36c-.63.8-2.337 2.64-2.337 2.64h.763l5.097-5.28z" fill="#EA4335" />
              </svg>
              <h3 class="text-lg font-medium ml-3">Google Drive</h3>
            </div>
            <span class="px-2 py-1 text-xs rounded-full ${isConnected ? "bg-green-100 text-green-800" : "bg-gray-100 text-gray-800"}">
              ${isConnected ? "Connected" : "Not connected"}
            </span>
          </div>
          
          <p class="text-gray-600 text-sm mb-4">
            Connect to Google Drive to access and process resumes stored in your Drive. This allows HR Genie to fetch resume files directly from your Google Drive folders.
          </p>
          
          ${
            isConnected && expiresAt
              ? `
            <div class="bg-gray-50 p-3 rounded text-xs mb-4 overflow-hidden">
              <p class="font-medium mb-1">Token Details:</p>
              <p class="truncate">Expires: ${formatDate(expiresAt)}</p>
            </div>
          `
              : ""
          }
          
          <a href="javascript:void(0);" onclick="startOAuthFlow('google-drive')" class="block w-full text-center py-2 px-4 rounded-md ${isConnected ? "bg-gray-200 text-gray-800" : "bg-indigo-600 text-white"}">
            ${isConnected ? "Reconnect" : "Connect to Google Drive"}
          </a>
        </div>
      `;
    }

    // Template for Wellfound integration
    function getWellfoundTemplate(
      isConnected: boolean,
      expiresAt: string | null = null
    ): string {
      return `
        <div class="border border-gray-200 rounded-lg p-6 hover:shadow-md transition-shadow">
          <div class="flex items-center justify-between mb-4">
            <div class="flex items-center">
              <svg class="h-8 w-8 text-gray-800" viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z" />
                <path d="M9.25 14.25L12 11.5l2.75 2.75.75-.75-3.5-3.5-3.5 3.5z" />
              </svg>
              <h3 class="text-lg font-medium ml-3">Wellfound</h3>
            </div>
            <span class="px-2 py-1 text-xs rounded-full ${isConnected ? "bg-green-100 text-green-800" : "bg-gray-100 text-gray-800"}">
              ${isConnected ? "Connected" : "Not connected"}
            </span>
          </div>
          
          <p class="text-gray-600 text-sm mb-4">
            Connect to Wellfound to access job listings and candidate information. This allows HR Genie to fetch job details and candidate profiles from Wellfound.
          </p>
          
          ${
            isConnected && expiresAt
              ? `
            <div class="bg-gray-50 p-3 rounded text-xs mb-4 overflow-hidden">
              <p class="font-medium mb-1">Token Details:</p>
              <p class="truncate">Expires: ${formatDate(expiresAt)}</p>
            </div>
          `
              : ""
          }
          
          <a href="javascript:void(0);" onclick="startOAuthFlow('wellfound')" class="block w-full text-center py-2 px-4 rounded-md ${isConnected ? "bg-gray-200 text-gray-800" : "bg-indigo-600 text-white"}">
            ${isConnected ? "Reconnect" : "Connect to Wellfound"}
          </a>
        </div>
      `;
    }

    // Template for Slack integration
    function getSlackTemplate(
      isConnected: boolean,
      expiresAt: string | null = null,
      teamId: string | null = null
    ): string {
      return `
        <div class="border border-gray-200 rounded-lg p-6 hover:shadow-md transition-shadow">
          <div class="flex items-center justify-between mb-4">
            <div class="flex items-center">
              <svg class="h-8 w-8 text-purple-600" viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                <path d="M5.042 15.165a2.528 2.528 0 0 1-2.52 2.523A2.528 2.528 0 0 1 0 15.165a2.527 2.527 0 0 1 2.522-2.52h2.52v2.52zM6.313 15.165a2.527 2.527 0 0 1 2.521-2.52 2.527 2.527 0 0 1 2.521 2.52v6.313A2.528 2.528 0 0 1 8.834 24a2.528 2.528 0 0 1-2.521-2.522v-6.313zM8.834 5.042a2.528 2.528 0 0 1-2.521-2.52A2.528 2.528 0 0 1 8.834 0a2.528 2.528 0 0 1 2.521 2.522v2.52H8.834zM8.834 6.313a2.528 2.528 0 0 1 2.521 2.521 2.528 2.528 0 0 1-2.521 2.521H2.522A2.528 2.528 0 0 1 0 8.834a2.528 2.528 0 0 1 2.522-2.521h6.312zM18.956 8.834a2.528 2.528 0 0 1 2.522-2.521A2.528 2.528 0 0 1 24 8.834a2.528 2.528 0 0 1-2.522 2.521h-2.522V8.834zM17.687 8.834a2.528 2.528 0 0 1-2.521 2.521 2.527 2.527 0 0 1-2.521-2.521V2.522A2.527 2.527 0 0 1 15.166 0a2.528 2.528 0 0 1 2.521 2.522v6.312zM15.166 18.956a2.528 2.528 0 0 1 2.521 2.522A2.528 2.528 0 0 1 15.166 24a2.527 2.527 0 0 1-2.521-2.522v-2.522h2.521zM15.166 17.687a2.527 2.527 0 0 1-2.521-2.521 2.526 2.526 0 0 1 2.521-2.521h6.313A2.527 2.527 0 0 1 24 15.166a2.528 2.528 0 0 1-2.522 2.521h-6.312z" />
              </svg>
              <h3 class="text-lg font-medium ml-3">Slack</h3>
            </div>
            <span class="px-2 py-1 text-xs rounded-full ${isConnected ? "bg-green-100 text-green-800" : "bg-gray-100 text-gray-800"}">
              ${isConnected ? "Connected" : "Not connected"}
            </span>
          </div>
          
          <p class="text-gray-600 text-sm mb-4">
            Connect to Slack to receive notifications and interact with HR Genie via Slack. This allows you to control the HR Genie bot and receive updates directly in your Slack workspace.
          </p>
          
          ${
            isConnected
              ? `
            <div class="bg-gray-50 p-3 rounded text-xs mb-4 overflow-hidden">
              <p class="font-medium mb-1">Token Details:</p>
              ${expiresAt ? `<p class="truncate">Expires: ${formatDate(expiresAt)}</p>` : ""}
              ${teamId ? `<p class="truncate">Team ID: ${teamId}</p>` : ""}
            </div>
          `
              : ""
          }
          
          <a href="javascript:void(0);" onclick="startOAuthFlow('slack')" class="block w-full text-center py-2 px-4 rounded-md ${isConnected ? "bg-gray-200 text-gray-800" : "bg-indigo-600 text-white"}">
            ${isConnected ? "Reconnect" : "Connect to Slack"}
          </a>
        </div>
      `;
    }

    // Fetch OAuth integrations from backend
    async function fetchOAuthIntegrations() {
      const container = document.getElementById("oauthIntegrations");
      if (!container) {
        console.error("OAuth integrations container not found");
        return; // Exit if container doesn't exist
      }
      try {
        const backendUrl =
          import.meta.env.BACKEND_URL || "http://localhost:3000";
        const response = await fetch(
          `${backendUrl}/api/v1/oauth/integrations`,
          {
            method: "GET",
            credentials: "include", // Important for cookies
          }
        );

        if (!response.ok) {
          throw new Error("Failed to fetch OAuth integrations");
        }

        const data = await response.json();

        // Clear loading state
        container.innerHTML = "";

        // Define expected data structure (adjust as needed)
        interface OAuthData {
          googleDrive?: { connected: boolean; expiresAt?: string };
          wellfound?: { connected: boolean; expiresAt?: string };
          slack?: { connected: boolean; expiresAt?: string; teamId?: string };
        }

        const typedData = data as OAuthData;

        // Add Google Drive card
        const googleDriveHtml = getGoogleDriveTemplate(
          typedData.googleDrive?.connected ?? false,
          typedData.googleDrive?.expiresAt ?? null
        );

        // Add Wellfound card
        const wellfoundHtml = getWellfoundTemplate(
          typedData.wellfound?.connected ?? false,
          typedData.wellfound?.expiresAt ?? null
        );

        // Add Slack card
        const slackHtml = getSlackTemplate(
          typedData.slack?.connected ?? false,
          typedData.slack?.expiresAt ?? null,
          typedData.slack?.teamId ?? null
        );

        // Add cards to container
        container.innerHTML = googleDriveHtml + wellfoundHtml + slackHtml;
      } catch (error) {
        console.error("Error fetching OAuth integrations:", error);

        // Show error state - Use the container variable checked earlier
        container.innerHTML = `
          <div class="col-span-3 text-center py-8">
            <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded" role="alert">
              <p>Failed to load OAuth integrations. Please reload the page or contact support.</p>
              <button onclick="fetchOAuthIntegrations()" class="mt-2 underline">Retry</button>
            </div>
          </div>
        `;
      }
    }

    // Start OAuth flow
    function startOAuthFlow(provider: string) {
      const backendUrl = import.meta.env.BACKEND_URL || "http://localhost:3000";
      window.location.href = `${backendUrl}/api/v1/oauth/${provider}/connect`;
    }

    // Initialize
    document.addEventListener("DOMContentLoaded", fetchOAuthIntegrations);
  </script>

  <div class="mt-8 bg-indigo-50 p-4 rounded-lg">
    <h3 class="text-lg font-medium text-indigo-800 mb-2">
      Why Connect Your Services?
    </h3>
    <p class="text-indigo-700 text-sm">
      Connecting your services allows HR Genie to automate resume processing,
      job matching, and communications. Your data remains secure and private,
      and you can disconnect at any time.
    </p>
  </div>
</DashboardLayout>
